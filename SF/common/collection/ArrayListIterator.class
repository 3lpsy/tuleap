<?php

require_once("Iterator.class");

class ArrayListIterator extends Iterator {
    
    /* protected Array */ var $_elements;
    /* protected int   */ var $_nb;
    /* protected int   */ var $_current;
    /* protected Array */ var $_keys;

    /**
     * Constructor
     * @param array the array to iterate through
     */
    function ArrayListIterator(&$elements) {
        $this->_elements =& $elements;
        $this->_nb       = count($this->_elements);
        $this->_current  = 0;
        $this->_keys     = array();
        foreach($this->_elements as $key => $value) {
            $this->_keys[] = $key;
        }
    }

    /**
     * @return Reference of the current object and point on the next object
     */
    function &next() {
        if (!$this->hasNext()) {
            trigger_error("There is no more element to iterate");
       } else {
            $element =& $this->_elements[$this->_keys[$this->_current]];
            $this->_current++;
            return $element;
        }
    }

    /**
     * @return true if we can call again next()
     */
    function hasNext() {
        return $this->_current < $this->_nb;
    }    
}

?>