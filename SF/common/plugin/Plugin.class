<?php
require_once('PluginInfo.class');
require_once('common/include/String.class');
require_once('common/collection/Map.class');
require_once('PluginManager.class');
/**
 * Copyright (c) Xerox Corporation, CodeX Team, 2001-2005. All rights reserved
 * 
 * $Id$
 *
 * Plugin
 */
class Plugin {
    
    var $id;
    var $pluginInfo;
    var $hooks;
    var $_scope;
    
    var $SCOPE_SYSTEM;
    var $SCOPE_PROJECT;
    var $SCOPE_USER;
    
    function Plugin($id = -1) {
        $this->id            = $id;
        $this->hooks         =& new Map();
        
        $this->SCOPE_SYSTEM  = 0;
        $this->SCOPE_PROJECT = 1;
        $this->SCOPE_USER    = 2;
        
        $this->_scope = $this->SCOPE_SYSTEM;
    }
    
    function getId() {
        return $this->id;
    }
    
    function &getPluginInfo() {
        if (!is_a($this->pluginInfo, 'PluginInfo')) {
            $this->pluginInfo =& new PluginInfo($this);
        }
        return $this->pluginInfo;
    }
    
    function &getHooks() {
        return $this->hooks->getKeys();
    }
    
    function &getHooksAndCallbacks() {
        return $this->hooks->getValues();
    }
    
    function _addHook($hook, $callback = 'CallHook', $recallHook = true) {
        $value = array();
        $value['hook']       = $hook;
        $value['callback']   = $callback;
        $value['recallHook'] = $recallHook;
        $this->hooks->put(new String($hook), $value);
    }
    function _removeHook($hook) {
        $this->hooks->removeKey(new String($hook));
    }
    function CallHook($hook, $param) {
    }
    
    function getScope() {
        return $this->_scope;
    }
    function _getPluginPath() {
        $pm =& $this->_getPluginManager();
        $path = $GLOBALS['sys_pluginspath'];
        if ($pm->pluginIsCustom($this)) {
            $path = $GLOBALS['sys_custompluginspath'];
        }
        return $path.'/'.$pm->getNameForPlugin($this);
    }
    function _getThemePath() {
    }
    function &_getPluginManager() {
        $pm =& PluginManager::instance();
        return $pm;
    }
}
?>