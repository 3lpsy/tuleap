<?php
//
// Copyright (c) Xerox Corporation, CodeX Team, 2001-2003. All rights reserved
//
// $Id$
//
//
//	Originally by to the SourceForge Team,1999-2000
//
//  Written for CodeX by Stephane Bouhet
//

//require($DOCUMENT_ROOT.'/../common/include/Error.class');
//require($DOCUMENT_ROOT.'/../common/tracker/ArtifactType.class');

class ArtifactTypeFactory extends Error {

	/**
	 * The Group object.
	 *
	 * @var	 object  $Group.
	 */
	var $Group;

	/**
	 * The ArtifactTypes array.
	 *
	 * @var	 array	ArtifactTypes.
	 */
	var $ArtifactTypes;

	/**
	 *  Constructor.
	 *
	 *	@param	object	The Group object to which this ArtifactTypeFactory is associated
	 *	@return	boolean	success.
	 */
	function ArtifactTypeFactory($Group) {
		$this->Error();
		if ( $Group ) {
			if ($Group->isError()) {
				$this->setError('ArtifactTypeFactory:: '.$Group->getErrorMessage());
				return false;
			}
			$this->Group = $Group;
		}
		
		return true;
	}

	/**
	 *	getGroup - get the Group object this ArtifactType is associated with.
	 *
	 *	@return	object	The Group object.
	 */
	function getGroup() {
		return $this->Group;
	}

	/**
	 *	getStatusIdCount - return a array of each status_id count.
	 *
	 *	@param	group_artifact_id
	 *
	 *	@return	array of counts
	 */
	function getStatusIdCount($group_artifact_id) {
		$count_array=array();
		$sql="select status_id,count(*) from artifact where group_artifact_id = ".$group_artifact_id.
			 " group by status_id";
		$result = db_query ($sql);

		$rows = db_numrows($result);

		if (!$result || $rows < 1) {
			$this->setError('None Found '.db_error());
			return false;
		} else {
			$count_array['count'] = 0;
			while ($arr = db_fetch_array($result)) {
				if ( $arr['status_id'] == 1 ) {
					$count_array['open_count'] = $arr[1];
				} 
				$count_array['count'] += $arr[1];
			}
			return $count_array;
		}
	}		

	/**
	 *	getArtifactTypes - return an array of ArtifactType objects of the current group
	 *
	 *	@return	array	The array of ArtifactType objects.
	 */
	function getArtifactTypes() {
		if ($this->ArtifactTypes) {
			return $this->ArtifactTypes;
		}
		if (user_isloggedin()) {
			// For project members, we can see all the trackers (both public and non public)
			if ( user_ismember($this->Group->getID()) ) {
				$public_flag='0,1';
			} else {
				$public_flag='1';
			}
		} else {
			$public_flag='1';
		}

		$sql="SELECT *, 0 as open_count, 0 as count FROM artifact_group_list
			WHERE group_id='". $this->Group->getID() ."'
			AND status != 'D'
			AND is_public IN ($public_flag)
			ORDER BY name ASC";

		$result = db_query ($sql);

		$rows = db_numrows($result);

		if (!$result || $rows < 1) {
			$this->setError('None Found '.db_error());
			return false;
		} else {
			while ($arr = db_fetch_array($result)) {
				// Retrieve status counts
				$arr_count = $this->getStatusIdCount($arr['group_artifact_id']);
				if ( $arr_count ) {
					$arr['open_count'] = $arr_count['open_count'];
					$arr['count'] = $arr_count['count'];
				}
				$this->ArtifactTypes[] = new ArtifactType($this->Group, $arr['group_artifact_id'], $arr);
			}
		}
		return $this->ArtifactTypes;
	}

	/**
	 *	getArtifactTypesFromId - return an array of ArtifactType objects of a group
	 *
	 *  @aparam group_id: the group id
	 *
	 *	@return	resultSet
	 */
	function getArtifactTypesFromId($group_id) {
		if ($this->ArtifactTypes) {
			return $this->ArtifactTypes;
		}
		if (user_isloggedin()) {
			// For project admin user (adn surperuser), we can see all the trackers (both public and non public)
			if ( user_ismember($group_id,'A') ) {
				$public_flag='0,1';
			} else {
				$public_flag='1';
			}
		} else {
			$public_flag='1';
		}

		$sql="SELECT group_artifact_id,name FROM artifact_group_list
			WHERE group_id='". $group_id ."'
			AND is_public IN ($public_flag)
			AND status!='D'
			ORDER BY group_artifact_id ASC";

		//echo $sql;
		
		$result = db_query ($sql);

		$rows = db_numrows($result);

		if (!$result || $rows < 1) {
			$this->setError('None Found '.db_error());
			return false;
		}

		return $result;
	}
	

	/**
	 *	getPendingArtifactTypes - return an array of ArtifactType objects with 'D' status
	 *
	 *  @aparam group_id: the group id
	 *
	 *	@return	resultSet
	 */
	function getPendingArtifactTypes() {
		$sql="SELECT group_artifact_id,name, deletion_date, groups.group_name as project_name, groups.group_id FROM artifact_group_list, groups
			WHERE artifact_group_list.status='D'
			AND groups.group_id=artifact_group_list.group_id
			ORDER BY group_artifact_id ASC";

		//echo $sql;
		
		$result = db_query ($sql);
		$rows = db_numrows($result);
		if (!$result || $rows < 1) {
			$this->setError('None Found '.db_error());
			return false;
		}

		return $result;
	}
	
	/**
	 *	Delete a tracker
	 *
	 *  @aparam atid: the artifact type id
	 *
	 *	@return	boolean
	 */
	function deleteArtifactType($atid) {
		
		// Delete artifact_canned_responses 
		$sql = "DELETE FROM artifact_canned_responses 
			    WHERE group_artifact_id=". $atid;
		db_query ($sql);

		// Delete artifact_notification  
		$sql = "DELETE FROM artifact_notification  
			    WHERE group_artifact_id=". $atid;
		db_query ($sql);

		// Delete artifact_notification_event   
		$sql = "DELETE FROM artifact_notification_event   
			    WHERE group_artifact_id=". $atid;
		db_query ($sql);
		
		// Delete artifact_notification_role   
		$sql = "DELETE FROM artifact_notification_role   
			    WHERE group_artifact_id=". $atid;
		db_query ($sql);

		// Delete artifact_perm   
		$sql = "DELETE FROM artifact_perm   
			    WHERE group_artifact_id=". $atid;
		db_query ($sql);
		
		// Delete all records linked to artifact_id
	    $sql_artifacts='SELECT artifact_id '.
		'FROM artifact '.
		'WHERE group_artifact_id='. $atid;
		
		//echo $sql_artifacts;
		
	    $res = db_query($sql_artifacts);
	
	    while ($artifacts_array = db_fetch_array($res)) {
			$id = $artifacts_array["artifact_id"];

			// Delete artifact_cc records	    	
	    	$sql = "DELETE FROM artifact_cc WHERE artifact_id = ".$id;
	    	db_query($sql);
	    	
			// Delete artifact_dependencies records	    	
	    	$sql = "DELETE FROM artifact_dependencies WHERE artifact_id = ".$id;
	    	db_query($sql);

			// Delete artifact_field_value records	    	
	    	$sql = "DELETE FROM artifact_field_value WHERE artifact_id = ".$id;
	    	db_query($sql);
	    	
			// Delete artifact_file records	    	
	    	$sql = "DELETE FROM artifact_file WHERE artifact_id = ".$id;
	    	db_query($sql);

			// Delete artifact_history records	    	
	    	$sql = "DELETE FROM artifact_history WHERE artifact_id = ".$id;
	    	db_query($sql);

			// Delete artifact records	    	
	    	$sql = "DELETE FROM artifact WHERE artifact_id = ".$id;
	    	db_query($sql);

		} // while
		

		// Delete artifact_group_list
		$sql = "DELETE FROM artifact_group_list
			    WHERE group_artifact_id=". $atid;
		//echo $sql;
		
		$result = db_query ($sql);

		if (!$result || db_affected_rows($result) <= 0) {
			$this->setError('Error: deleteArtifactType '.db_error());
			return false;
		}
		
		return true;
	}
	
	
	/**
	 *	Retrieve a list of trackers where a user is a submitter or has some artifacts assigned
	 *  and which have a tracker name 
	 *
	 *  @param user_id: the user id
	 *  @param pattern: the pattern
	 *
	 *	@return	array
	 */
	function getPatternTrackers($user_id,$pattern) {
		$result_trackers = array();

		// List of trackers - Check on assigned_to or multi_assigned_to or submitted by
		$sql = "SELECT agl.group_artifact_id,agl.group_id,count(*) as count FROM artifact_group_list agl, artifact a, artifact_field af, artifact_field_value afv, groups g WHERE ".
			   "a.group_artifact_id = agl.group_artifact_id AND af.group_artifact_id = agl.group_artifact_id AND ".
			   "(af.field_name = 'assigned_to' OR af.field_name = 'multi_assigned_to') AND af.field_id = afv.field_id AND a.artifact_id = afv.artifact_id AND ".
			   "(afv.valueInt=".$user_id." OR a.submitted_by=".$user_id.") AND agl.name like '%".$pattern."%' AND agl.status = 'A' AND ".
			   "agl.group_id = g.group_id AND a.status_id <> 3 ".
			   "GROUP BY agl.group_artifact_id,agl.group_id ORDER BY g.group_name,agl.name";

		//echo $sql;
		
	    $res = db_query($sql);
	
	    while ($trackers_array = db_fetch_array($res)) {
	    	$atid = $trackers_array['group_artifact_id'];
	    	$group_id = $trackers_array['group_id'];
	    	$result_trackers[$group_id."-".$atid] = $trackers_array['count'];
	    }
	    
	    if ( count($result_trackers) > 0 ) {
	    	return $result_trackers;
	    }
	    
		// List of trackers - Check only on submitted_by
		$sql = "SELECT agl.group_artifact_id,agl.group_id,count(*) as count FROM artifact_group_list agl, artifact a, groups g WHERE ".
			   "a.group_artifact_id = agl.group_artifact_id AND ".
			   "a.submitted_by=".$user_id." AND agl.name like '%".$pattern."%' AND agl.status = 'A' AND ".
			   "agl.group_id = g.group_id AND a.status_id <> 3 ".
			   "GROUP BY agl.group_artifact_id,agl.group_id ORDER BY g.group_name,agl.name";

		//echo $sql;
		
	    $res = db_query($sql);
	
	    while ($trackers_array = db_fetch_array($res)) {
	    	$atid = $trackers_array['group_artifact_id'];
	    	$group_id = $trackers_array['group_id'];
	    	$result_trackers[$group_id."-".$atid] = $trackers_array['count'];
	    }

	    return $result_trackers;
	}

}

?>