<?php
/* 
 * Copyright 2005, STMicroelectronics
 *
 * Originally written by Manuel Vacelet
 *
 * This file is a part of CodeX.
 *
 * CodeX is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * CodeX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CodeX; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
require_once('common/mvc/Controler.class');
require_once('common/wiki/views/WikiServiceViews.class');
require_once('common/wiki/actions/WikiServiceActions.class');
require_once('common/wiki/lib/WikiPage.class');
require_once('common/wiki/lib/Wiki.class');

/**
 * Entry point of WikiService
 *
 * This class receive HTTP requests for Wiki Service.
 *
 * @package   WikiService
 * @copyright STMicroelectronics, 2005
 * @author    Manuel Vacelet <manuel.vacelet-abecedaire@st.com>
 * @license   http://opensource.org/licenses/gpl-license.php GPL
 */
class WikiService extends Controler {
  /* private Wiki*/ var $wiki;

  /**
   * Constructor
   */
  function WikiService($id) {
    /* 
     * Check given id 
     */
    $this->gid = (int) $id;

    if(empty($this->gid))
      exit_no_group();

    $go = group_get_object($this->gid);
    if(!$go) 
      exit_no_group();

    $this->wiki = new Wiki($this->gid);
    
    /*
     * Check user
     */
    if (!user_isloggedin())
      exit_not_logged_in();

    // Check access right
    $this->checkPermissions();

    // Temp: create a wiki entry if there is no entry
    $wem = new WikiEntryManager($this->gid);
    $wem->getList();
    $docCounter=$wem->count();
    if($docCounter <= 0) {
      $we = new WikiEntry();
      $we->setGid($this->gid);
      $we->setName('Wiki Home');
      $we->setPage('HomePage');
      $we->setDesc('Default Wiki Document');
      $we->add();
    }

    // If Wiki for project doesn't exist, create it ... if user is admin
    if(!$this->wiki->exist()) {
      if(!user_ismember($this->gid, 'W2')) {
	exit_wiki_empty();
      }
      else {	
	header('Location: /wiki/admin/index.php?group_id='.$this->gid.'&view=install');
      }
    }
  }


  /**
   * Check access permissions for wiki and wiki pages.
   *
   * Check restriction for:
   *  wiki: whole wiki can be restricted.
   *  wikipage: each page of the wiki can be restricted.
   */
  function checkPermissions() {
    // Check if user can access to whole wiki
    if(!$this->wiki->isAutorized(user_getid())) {
      exit_error('Access Denied', 'You are not authorized to access this Wiki. 
                                   Please contact a Project Administrator.');
    }

    // Check if user can access to selected page
    if(!empty($_REQUEST['pagename'])) {
      $wp = new WikiPage($this->gid, $_REQUEST['pagename']);
      if(!$wp->isAutorized(user_getid())) {
	exit_error('Access Denied', 'You are not authorized to access this 
                                     Wiki Page. Please contact a Project 
                                     Administrator.');
      }
    }
  }

  /**
   * Bind http request with views and actions
   */
  function request() {
    $this->view = 'browse';

    if(!empty($_REQUEST['pagename'])) 
      $this->view = 'wiki';

    if($_REQUEST['format'] == 'rss') 
      $this->view = 'empty'; 

    if($_REQUEST['pv'] == '1') 
      $this->view = 'empty'; 

    if($_REQUEST['action'] == 'pdf') 
      $this->view = 'empty';

    if($_REQUEST['action'] == 'ziphtml') 
      $this->view = 'empty';

    if($_REQUEST['action'] == 'zip') 
      $this->view = 'empty';

    if($_REQUEST['action'] == 'add_temp_page')
      $this->action = 'add_temp_page';

    if($_REQUEST['action'] == 'setWikiPagePerms')
      $this->action = 'setWikiPagePerms';

    if($_REQUEST['view'] == 'browsePages')
      $this->view = 'browsePages';
  }

}
?>