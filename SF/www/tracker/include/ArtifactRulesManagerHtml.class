<?php
//
// Copyright (c) Xerox Corporation, CodeX Team, 2001-2003. All rights reserved
//
// $Id$
//
//

require_once('common/tracker/ArtifactRulesManager.class');
require_once('ArtifactTypeHtml.class');
//require_once('ArtifactRuleHtml.class');
require_once('ArtifactRuleValueJavascript.class');
$Language->loadLanguageMsg('tracker/tracker');

class ArtifactRulesManagerHtml extends ArtifactRulesManager {

    var $artifact_type;
    var $href;
    
	/**
	 *  ArtifactRulesManagerHtml() - constructor
	 *
	 *  @param $artifact_type object
	 */
	function ArtifactRulesManagerHtml(&$artifact_type_html, $href) {
		$this->ArtifactRulesManager();
        $this->artifact_type =& $artifact_type_html;
        $this->href          = $href;
	}
    
    function saveRule($source, $source_value, $target, $target_values) {
        parent::saveRule($this->artifact_type->getId(), $source, $source_value, $target, $target_values);
    }
    
    function displayRulesAsJavascript() {
        echo "\n//------------------------------------------------------\n";
        $art_field_fact =& new ArtifactFieldFactory($this->artifact_type);
        $used_fields = $art_field_fact->getAllUsedFields();
        foreach($used_fields as $field) {
            if ($field->isSelectBox() || $field->isSelectBox()) {
                $values = $field->getFieldValues ($this->artifact_type->getID(),"'A','P'");
                if (db_numrows($values) > 1) {
                    echo "fields['".$field->getID()."'] = new com.xerox.codex.tracker.Field('".$field->getID()."', '".$field->getLabel()."');\n";
                    $default_value = $field->getDefaultValue();
                    echo "options['".$field->getID()."'] = {};\n";
                    while ($row = db_fetch_array($values)) {
                        echo "options['". $field->getID() ."']['". $row['value_id'] ."'] = {option:new Option('". $row['value'] ."', '". $row['value_id'] ."'), selected:". ($row['value_id']==$default_value?'true':'false') ."};\n";
                    }
                }
            }
        }
        $rules = $this->getAllRulesByArtifactTypeWithOrder($this->artifact_type->getId());
        if ($rules && count($rules) > 0) {
            foreach ($rules as $key => $nop) {
                $html =& new ArtifactRuleValueJavascript($rules[$key]);
                echo 'rules_definitions['. $rules[$key]->id .'] = ';
                $html->display();
                echo ";\n";
            }
        }
        echo "\n//------------------------------------------------------\n";
    }
    
    function displayEditForm() {
        //echo '<h3>'. $GLOBALS['Language']->getText('tracker_include_type','edit_rule') .'</h3>';
        echo '<noscript class="error">'. $GLOBALS['Language']->getText('tracker_dynamic_fields','noscript') .'</noscript>';
        echo '<form action="'. $this->href .'" method="post"><div id="edit_rule"></div>';
        echo '<input type="hidden" id="save"  name="save" value="no" />';
        echo '<input type="hidden" id="value" name="value" value="" />';
        echo '<input type="hidden" id="direction_type" name="direction_type" value="" />';
        echo '</form>';
        echo '<script type="text/javascript">'."\n";
        echo "//<![CDATA[\n";
        $this->displayRulesAsJavascript();
        
        echo "messages = {\n";
            //echo "href:               '". $this->href ."',\n";
            echo "choose_field:       '". $GLOBALS['Language']->getText('tracker_include_type','choose_field') ."',\n";
            echo "if_then:            '". $GLOBALS['Language']->getText('tracker_include_type','if_then') ."',\n";
            echo "btn_save_rule:      '". $GLOBALS['Language']->getText('global','btn_submit') ."',\n";
            echo "btn_reset:          '". $GLOBALS['Language']->getText('global','btn_reset') ."',\n";
            echo "delete_are_you_sure:'". $GLOBALS['Language']->getText('tracker_dynamic_fields','delete_are_you_sure') ."'";
        echo "};\n";
        echo "Event.observe(window, 'load', buildAdminUI, true);";
        echo "\n//------------------------------------------------------\n";
        echo "\n".'//]]></script>';
    }
    
    function displayRules() {
        $this->_header();
        $this->displayEditForm();
        echo '<br />';
        $this->_footer();
    }
    
    function saveFromRequest(&$request) {
        switch ($request->get('direction_type')) {
            case 'source': // 1 source -> n targets
                $this->deleteRuleValueBySource($this->artifact_type->getId(), $request->get('source_field'), $request->get('value'), $request->get('target_field'));
                //get target values
                $art_field_fact =& new ArtifactFieldFactory($this->artifact_type);
                $target_field   =& $art_field_fact->getFieldFromId($request->get('target_field'));
                $target_values  = $target_field->getFieldValues ($this->artifact_type->getID(),"'A','P'");
                while ($row = db_fetch_array($target_values)) {
                    if ($request->exist('target_'. $request->get('source_field') .'_'. $request->get('target_field') .'_'. $row['value_id'] .'_chk')) {
                        $this->saveRuleValue($this->artifact_type->getId(), $request->get('source_field'), $request->get('value'), $request->get('target_field'), $row['value_id']);
                    }
                }
                header('Location: '. $this->href .'&source_field='. $request->get('source_field') .'&target_field=' .$request->get('target_field'). '&source_value=' .$request->get('value'));
                break;
            case 'target': // n sources -> 1 target
                $this->deleteRuleValueByTarget($this->artifact_type->getId(), $request->get('source_field'), $request->get('target_field'), $request->get('value'));
                //get source values
                $art_field_fact =& new ArtifactFieldFactory($this->artifact_type);
                $source_field   =& $art_field_fact->getFieldFromId($request->get('source_field'));
                $source_values  = $source_field->getFieldValues ($this->artifact_type->getID(),"'A','P'");
                while ($row = db_fetch_array($source_values)) {
                    if ($request->exist('source_'. $request->get('source_field') .'_'. $request->get('target_field') .'_'. $row['value_id'] .'_chk')) {
                        $this->saveRuleValue($this->artifact_type->getId(), $request->get('source_field'), $row['value_id'], $request->get('target_field'), $request->get('value'));
                    }
                }
                header('Location: '. $this->href .'&source_field='. $request->get('source_field') .'&target_field=' .$request->get('target_field'). '&target_value=' .$request->get('value'));
                break;
            default:
                $this->badRequest();
                break;
        }
    }
    
    function badRequest() {
        header("HTTP/1.1 400 Bad Request");
        $GLOBALS['feedback'] .= 'Bad Request';
        $this->_header();
        echo "The server is unable to process your request.";
        $this->_footer();
        exit();
    }
    function _header() {
        $GLOBALS['HTML']->includeJavascriptFile("/include/scriptaculous/prototype.js");
        $GLOBALS['HTML']->includeJavascriptFile("/include/scriptaculous/scriptaculous.js");
        $GLOBALS['HTML']->includeJavascriptFile("/include/dynamicFields.js");
        
        $params = array();
        $params['title']   = $this->artifact_type->getName() .' '. $GLOBALS['Language']->getText('tracker_include_type','mng_dynamic_fields');
        $params['help']    = 'TrackerAdministration.html';
		$this->artifact_type->adminHeader($params);
        $this->artifact_type->displayAdminTitle($GLOBALS['Language']->getText('tracker_include_type','mng_dynamic_fields_title'));
    }
    
    function _footer() {
        $this->artifact_type->footer(array());
    }
}

?>
