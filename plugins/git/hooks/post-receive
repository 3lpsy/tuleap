#!/bin/sh
#
# An example hook script for the post-receive event
#
# This script is run after receive-pack has accepted a pack and the
# repository has been updated.  It is passed arguments in through stdin
# in the form
#  <oldrev> <newrev> <refname>
# For example:
#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
#
# see contrib/hooks/ for an sample, or uncomment the next line (on debian)
#

#. /usr/share/codendi/plugins/git/hooks/post-receive-email 2>/dev/null

count_threshold=100

push_timestamp=$(date +%s)

git_dir_path=$(git rev-parse --git-dir 2>/dev/null)
repository_path=$(cd $git_dir_path; pwd)

# We have a GL_USER variable when running through Gitolite.
# if running git-shell, the current user is the one who run
# the script
if [ -z "$GL_USER" ]; then
    user_name=$(whoami)
else
    user_name="$GL_USER"
fi

/usr/lib/codendi/bin/git-post-receive.pl --init $repository_path $user_name

count=0
while read oldrev newrev refname
    do
        if [ $count -lt $count_threshold ]; then
            count=$(($count+1))
            echo $oldrev $newrev $refname | /usr/share/codendi/plugins/git/hooks/post-receive-email 2>/dev/null
            /usr/lib/codendi/bin/git-post-receive.pl $repository_path $user_name $oldrev $newrev $refname 2>/dev/null
        else
            :
        fi
    done

if [ $count -ge $count_threshold ]; then
    echo "*** info: More than $count_threshold references in push."
    echo "*** info: further analysis skipped: email, reference extraction, "
    echo "*** info: trigger of continuous integration, ..."
else
    :
fi

# Why those stupid colons?
# http://stackoverflow.com/questions/3224878/what-is-the-purpose-of-the-colon-gnu-bash-builtin
