/**
 * CodeX: Breaking Down the Barriers to Source Code Sharing
 *
 * Copyright (c) Xerox Corporation, CodeX, 2007. All Rights Reserved
 *
 * This file is licensed under the CodeX Component Software License
 *
 * @author Anne Hardyau
 * @author Marc Nazarian
 */

package com.xerox.xrce.codex.jri.model.tracker;

import java.util.ArrayList;
import java.util.List;

import com.xerox.xrce.codex.jri.model.CxFromServer;
import com.xerox.xrce.codex.jri.model.CxServer;
import com.xerox.xrce.codex.jri.model.wsproxy.ArtifactField;
import com.xerox.xrce.codex.jri.model.wsproxy.ArtifactFieldSet;

/**
 * CxArtifactFieldSet is the class for field set. A FieldSet is a logical set of
 * fields.
 * 
 */
public class CxArtifactFieldSet extends CxFromServer {

    /**
     * The tracker this fieldset belongs to
     */
    private CxTracker tracker;

    /**
     * The ArtifactFieldSet Object (generated by WSDL2JAVA)
     */
    private ArtifactFieldSet artifactFieldSet;

    /**
     * The fields contained in this fieldset
     */
    private List<CxArtifactField> fields = null;

    public CxArtifactFieldSet(CxServer server, ArtifactFieldSet artifactFieldSet) {
        super(server);
        this.artifactFieldSet = artifactFieldSet;
    }

    /**
     * Returns the list of fields contained in this fieldset
     * 
     * @param refresh true if you want to enforce to refresh the list from the
     *        CodeX server (some changes can have be done by other users), false
     *        otherwise
     * @return the list of fields contained in this fieldset
     */
    public synchronized List<CxArtifactField> getFields(boolean refresh) {
        if (this.fields == null || refresh) {
            this.initFields();
        }
        return fields;
    }

    /**
     * Return the tracker this fieldset belongs to
     * 
     * @return the tracker this fieldset belongs to
     */
    public CxTracker getTracker() {
        return tracker;
    }

    /**
     * Sets the tracker to this fieldset
     * 
     * @param tracker the tracker to set to this fieldset
     */
    public void setTracker(CxTracker tracker) {
        this.tracker = tracker;
    }

    /**
     * Init this fieldset.
     * 
     */
    private void initFields() {
        // fieldsets init
        this.fields = new ArrayList<CxArtifactField>();
        ArtifactField[] artifactsFields = null;

        artifactsFields = this.artifactFieldSet.getFields();

        for (ArtifactField artifactField : artifactsFields) {
            CxArtifactField field = new CxArtifactField(this.getServer(), artifactField);
            field.setArtifactFieldSet(this);
            this.fields.add(field);
        }
    }

    /**
     * Return the label of this fieldset
     * 
     * @return the label of this fieldset
     */
    public String getLabel() {
        return artifactFieldSet.getLabel();
    }

}
