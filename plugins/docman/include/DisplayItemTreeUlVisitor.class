<?php
/**
 * Copyright (c) STMicroelectronics, 2006. All Rights Reserved.
 *
 * Originally written by Manuel Vacelet, 2006
 *
 * This file is a part of CodeX.
 *
 * CodeX is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * CodeX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CodeX; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 */

require_once('common/collection/Visitor.class');

class DisplayItemTreeUlVisitor extends Visitor {
    var $html;
    var $stripFirstNode;
    var $firstNodeStripped;

    function DisplayItemTreeUlVisitor() {
        $this->html  = '';
        $this->stripFirstNode = true;
        $this->firstNodeStripped = false;
    }

    function toHtml() {
        return $this->html;
    }
  

    function visit(&$itemNode) {        
        $item =& $itemNode->getData();        

        $isCollapsed = false;
        if(user_get_preference(DOCMAN_COLLAPSE_FOLDER_PREF.'_'.$item->getGroupId().'_'.$item->getId()) !== false) {
            $isCollapsed = true;
        }

        /*$hasChildren = false;
        if($itemNode->hasChildren() || in_array($item->getId(), $this->parentList)) {
            $hasChildren = true;
        }*/

        $lidisplayed = false;
        if($this->stripFirstNode && !$this->firstNodeStripped) {
            $this->firstNodeStripped=true;
        }
        else {
            if($item !== null) {
                $liclass = '';
                if($isCollapsed) {
                    $liclass = ' class="collapsed"';
                }
                else {
                    if($itemNode->hasChildren()) {
                        $liclass = ' class="expanded"';
                    }
                }
                $lidisplayed = true;
                $this->html .= '<li id="li_'.$item->getId().'"'.$liclass.'>'.$item->getTitle();
            }
        }
              
        if($itemNode->hasChildren()) {
            $this->html .= '<ul id="ul_'.$item->getId().'">'."\n";

            $ci =& $itemNode->getChildIterator();               
            
            while($ci->valid()) {
                $child =& $ci->current();
                
                $child->accept($this);
                
                $ci->next();
            }
            
            $this->html .= '</ul>'."\n";
        }

        if($lidisplayed) {
            $this->html .= '</li>'."\n";
        }
        
    }
}


?>