<?php
/**
* Copyright (c) Xerox Corporation, CodeX Team, 2001-2005. All rights reserved
* 
* $Id$
*
* Docman_View_GetFieldsVisitor
*/

require_once('Docman_View_GetSpecificFieldsVisitor.class');
require_once(dirname(__FILE__).'/../Docman_ValidateTitle.class');
require_once(dirname(__FILE__).'/../Docman_MetadataHtml.class');

class Docman_View_GetFieldsVisitor /* implements Visitor*/ {
    
    function visitItem(&$item, $params = array()) {
        $title       = isset($params['force_item']['title'])       ? $params['force_item']['title']       : $item->getTitle();
        $description = isset($params['force_item']['description']) ? $params['force_item']['description'] : $item->getDescription();

        $fields = array();

        /*  $mdBo =& new Docman_MetadataBo();
        $mdIter =& $mdBo->getSubmissionMetadataForGroup($param['group_id']);*/

        $mdIter =& $item->getMetadataIterator();
        $mdIter->rewind();
        while($mdIter->valid()) {
            $md =& $mdIter->current();
            
            $mdHtml =& Docman_MetadataHtmlFactory::getFromMetadata($md);

            $fields[$md->getLabel()] = array('label'       => $mdHtml->getLabel()
                                             , 'field'     => $mdHtml->getField()
                                             , 'value'     => $mdHtml->getValue()
                                             , 'validator' => $mdHtml->getValidator());

            $mdIter->next();
        }

        return $fields;       
    }
    function visitFolder(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
    function visitDocument(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
    function visitWiki(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
    function visitLink(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
    function visitFile(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
    function visitEmbeddedFile(&$item, $params = array()) {
        return $this->visitItem($item, $params);
    }
}
?>