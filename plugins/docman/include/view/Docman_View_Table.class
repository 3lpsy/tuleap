<?php
/*
 * Copyrightï¿½ STMicroelectronics, 2006
 * Originally written by Manuel VACELET, STMicroelectronics, 2006
 *
 * This file is a part of CodeX.
 *
 * CodeX is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * CodeX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CodeX; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 *
 */
require_once('Docman_View_Browse.class');

class Docman_View_Table extends Docman_View_Browse {
    
    /* protected */ function _filter($params) {   
        echo '
<!-- Filters -->
<fieldset class="docman_filters">
<legend>'. $GLOBALS['Language']->getText('plugin_docman', 'filters') .'</legend>
<form name="plugin_docman_filters" method="GET" action="?">
<input type="hidden" name="group_id" value="'.$params['group_id'].'">
';
        if($params['filter'] !== null) {
            $fi =& $params['filter']->getIterator();
            $fi->rewind();
            while($fi->valid()) {        
                $f =& $fi->current();
             
                $htmlFilter =& Docman_HtmlFilterFactory::getFromFilter($f);
                if($htmlFilter !== null) {
                    print $htmlFilter->toHtml('plugin_docman_filters');
                    echo "&nbsp;\n";
                }
                
                $fi->next();
            }
        }              
echo '<input name="submit" type="submit" value="'. $GLOBALS['Language']->getText('global', 'btn_browse') .'">
</form>
</fieldset>
';
    }

    /* protected */ function _content($params) {      
        $itemBo = new Docman_ItemBo($params['group_id']);

        $itemIterator =& $itemBo->getItemSubTreeAsList($params['item']->getId(), 
                                                       array('user' => $params['user'],
                                                             'ignore_collapse' => true,
                                                             'filter' => $params['filter'],
                                                             'order' => $params['order']));             

        $itemFactory =& new Docman_ItemFactory();

        $html = html_build_list_table_top(array($GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_title'),
                                                $GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_desc'),
                                                $GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_owner'),
                                                $GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_subdate'),
                                                $GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_lastauthor'),
                                                $GLOBALS['Language']->getText('plugin_docman',
                                                                              'view_documenttablevisitor_lastupdate')));
        $altRowClass = 0;

        $itemIterator->rewind();
        while($itemIterator->valid()) {
            $item =& $itemIterator->current();

            $type = $itemFactory->getItemTypeForItem($item);
            if($type != PLUGIN_DOCMAN_ITEM_TYPE_FOLDER) {

                $trclass = html_get_alt_row_color($altRowClass++);
                $html .=  "<tr class=\"".$trclass."\">\n";
            
                // Title
                $html .=  "<td>";
                $html .=  '<a href="?group_id='. $item->getGroupId() .'&amp;action=show&amp;id='. $item->getId() .'">';
                $html .=  $item->getTitle();
                $html .=  '</a>';
                $html .=  "</td>\n";

                // Description
                $html .=  "<td>";
                $html .=  $item->getDescription();
                $html .=  "</td>\n";

                // Owner
                $html .=  "<td>";
                $html .=  user_getname($item->getOwnerId());
                $html .=  "</td>\n";

                // Submission Date
                $html .=  "<td>";
                $html .=  strftime("%e %b %Y %H:%M", $item->getCreateDate());
                $html .=  "</td>\n";

                // Last Author
                $html .=  "<td>";            
                if ($type == PLUGIN_DOCMAN_ITEM_TYPE_FILE 
                    || $type == PLUGIN_DOCMAN_ITEM_TYPE_EMBEDDEDFILE) {
                    $v =& $item->getCurrentVersion();
                    $authorId = $v->getAuthorId();
                    if($authorId == '') {
                        $authorId = -1;
                    }
                }
                else {
                    $authorId = $item->getOwnerId();
                }
                $html .=  user_getname($authorId);
                $html .=  "</td>\n";
            
                // Last Update
                $html .=  "<td>";
                $html .=  strftime("%e %b %Y %H:%M", $item->getUpdateDate());
                $html .=  "</td>\n";

                $html .=  "</tr>\n";
            }
            $itemIterator->next();
        }
        $html .= "</table>\n";        

        print $html;        
    }
}
?>
