Elastic Search
==============

This plugin is still in heavy development: do not use in production!

QA Server deployment
--------------------

http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-repositories.html#_yum

You need to install elasticsearch server packages:

    $> yum install java-1.7.0-openjdk
    $> yum install elasticsearch
    $> /usr/share/elasticsearch/bin/plugin -install elasticsearch/elasticsearch-mapper-attachments/2.0.0

> Note: while you can install elasticsearch on the same server than tuleap, we strongly recommend
> not to do so as elasticsearch might consume a huge amount of disk/cpu/ram.
> It depends of the size of your installation but for big deployments, it's worth considering a 
> dedicated server (or even pool of servers).


Security
--------
The very minimal setup is to restrict  server port binding to localhost only (otherwise anybody can query index anonymously):

    $ edit /etc/elasticsearch/elasticsearch.yml
      ...
      network.host: 127.0.0.1
      ...

To improve this (mandatory for a production deployment) you shall setup a reverse proxy

    $> yum install scl-utils
    $> rpm -i https://www.softwarecollections.org/en/scls/rhscl/nginx14/epel-6-x86_64/download/rhscl-nginx14-epel-6-x86_64-1-2.noarch.rpm
    $> yum install nginx14-nginx
    $> yum install httpd-tools # needed to generate htpassword file


Generate a password file:

   $> htpasswd -c /opt/rh/nginx14/root/etc/nginx/htpasswd elasticsearch

Then, setup reverse proxy. Edit ``/opt/rh/nginx14/root/etc/nginx/nginx.conf`` and add following snippet in ``http`` section:

       listen 9222;

       location / {
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:9200/;
            proxy_redirect off;

            # Password
            auth_basic "Elasticsearch for Tuleap Restricted";
            auth_basic_user_file /opt/rh/nginx14/root/etc/nginx/htpasswd;

            # Don't forward auth header
            proxy_set_header   Authorization "";
        }

Finally, start the proxy (password is the one you defined in previous step):

    $> chkconfig nginx14-nginx on
    $> service nginx14-nginx start
    $> curl -u elasticsearch:password http://localhost:9222/


Cluster
-------
ElasticSearch works in a cluster. It autodiscovers nodes you add to it. This means that for each tuleap instance you need 
to have a dedicated cluster. See http://www.elasticsearch.org/guide/reference/modules/discovery/ for details.

Give a unique name to your cluster in elasticsearch.yml

    cluster.name: <unique-name>


Setup index
-----------
Then you can start the server:

    $ service elasticsearch start

After few seconds you should be able to test access:

    $ curl -u superuser:Adm1n -XGET localhost:9200

Now we can create the minimal index configuration.
Create the index: (please note that the number of shards|replicas are for development purpose)


    $ curl -u superuser:Adm1n -X PUT "localhost:9200/tuleap" -d '{
        "settings" : { "index" : { "number_of_shards" : 1, "number_of_replicas" : 0 }}
    }'

    $ curl -u superuser:Adm1n -X PUT "localhost:9200/docman" -d '{
        "settings" : { "index" : { "number_of_shards" : 1, "number_of_replicas" : 0 }}
    }'

Define the attachment mapping for tracker type:

    $ curl -u superuser:Adm1n -X PUT "localhost:9200/tuleap/tracker/_mapping" -d '{
      "tracker" : {
        "properties" : {
          "followup" : {
            "type" : "string",
            "store" : "yes"
          },
          "permissions": {
            "type": "string",
            "index": "not_analyzed"
          }
        }
       }
      }'

Check it worked:

    $ curl -u superuser:Adm1n "localhost:9200/tuleap/_mapping?pretty"
    ...

Now you can activate the plugin in Tuleap admin interface and start uploading documents

Clean-up
--------

If you previously used an old configuration for ElasticSearch with Tuleap,
please delete the index to start over:

    $ curl -X DELETE "localhost:9200/tuleap"
    $ curl -X DELETE "localhost:9200/docman"
    $ curl -X DELETE "localhost:9200/tracker"

Development setup
-----------------

Setup tuleap server
```````````````````

$> yum install php-elasticsearch


Setup elasticsearch server
``````````````````````````

  1. Create a mountable data directory `<data-dir>` on the host.

  2. Create ElasticSearch config file at `<data-dir>/elasticsearch.yml`.

    ```yml
    path:
      logs: /data/log
      data: /data/data

    script.disable_dynamic: false
    ```

  3. Start a container by mounting data directory and specifying the custom configuration file:

    ```sh
    docker run -d -p 9200:9200 -v <data-dir>:/data enalean/elasticsearch-tuleap /elasticsearch/bin/elasticsearch -Des.config=/data/elasticsearch.yml
    ```

After few seconds, open `http://<host>:9200` to see the result.

You can now do the setup steps like for prod.

Now upload a file into the docman. Then, for some text (e.g. Foo) in the
uploaded file:

    $ curl 'localhost:9200/tuleap/docman/_search?q=Foo'

Monitoring
----------

You can install elasticsearch-head to monitor your ElasticSearch cluster.
See more information on http://mobz.github.com/elasticsearch-head/

> Note: You may encounter problems if you set up Basic Auth.

References
----------

- http://www.elasticsearch.org/
- https://github.com/elasticsearch/elasticsearch-mapper-attachments
- http://www.elasticsearch.org/tutorials/2011/07/18/attachment-type-in-action.html
