<?php
//
// Copyright (c) Xerox Corporation, CodeX Team, 2001-2006. All rights reserved
//
// 
//
//

require_once('pre.php');
require_once('common/include/HTTPRequest.class.php');
require_once('common/reference/ReferenceManager.class.php');

$reference_manager =& ReferenceManager::instance();
$request =& HTTPRequest::instance();

$vGroupId = new Valid_GroupId();
if (!$request->valid($vGroupId))
    $group_id=100;
 else $group_id=$request->get('group_id');

$vKey = new Valid_String('key');
$vKey->required();
$vVal = new Valid_String('val');
$vVal->required();
if ((!$request->valid($vKey))
    ||(!$request->valid($vVal))) {
    exit_error($GLOBALS['Language']->getText('global','error'),
               $GLOBALS['Language']->getText('include_exit', 'missing_param_err'));
 }

$keyword=$request->get('key');
$args=array();
$args =explode("/",$request->get('val'));

$ref=& $reference_manager->loadReferenceFromKeywordAndNumArgs($keyword,$group_id,count($args));
if (!$ref) {
    exit_error($GLOBALS['Language']->getText('global','error'),
               $GLOBALS['Language']->getText('include_exit', 'missing_param_err'));
 }

// Get groupname (might be useful in replace rules)
$projname=null;
$gf = new GroupFactory();
$results = $gf->getAllGroups();
while ($groups_array = db_fetch_array($results)) {
    if ($groups_array["group_id"]==$group_id) {
        $projname=$groups_array["unix_group_name"];
        break;
    }
 }

$ref->replaceLink($args,$projname);
if ($request->isAjax()) {
    switch($ref->getServiceShortName()) {
        case 'bugs':
        case 'tracker':
        case 'support':
        case 'task':
            $user_id = UserManager::instance()->getCurrentUser()->getId();
            $aid = $request->get('val');
            $sql = "SELECT group_artifact_id FROM artifact WHERE artifact_id= ". db_ei($aid);
            $result = db_query($sql);
            if (db_numrows($result)>0) {
                $row = db_fetch_array($result);
                $atid = $row['group_artifact_id'];
                
                require_once('common/tracker/ArtifactType.class.php');
                require_once('common/tracker/ArtifactFieldFactory.class.php');
                require_once('tracker/include/ArtifactHtml.class.php');
                require_once('tracker/include/ArtifactFieldHtml.class.php');
                $at = new ArtifactType(project_get_object($group_id),$atid);
                $art_field_fact = new ArtifactFieldFactory($at);
                $ah=new ArtifactHtml($at,$aid);
                
                $values = array();
                
                $summary = $art_field_fact->getFieldFromName('summary');
                if ($summary->userCanRead($group_id, $atid)) {
                    $html = $ah->_getFieldLabelAndValueForUser($group_id, $atid, $summary, $user_id, true);
                    $values[] = $html['value'];
                }
                
                $status  = $art_field_fact->getFieldFromName('status_id');
                if ($status->userCanRead($group_id, $atid)) {
                    $html = $ah->_getFieldLabelAndValueForUser($group_id, $atid, $status, $user_id, true);
                    $values[] = $html['value'];
                }
                
                if (count($values)) {
                    echo '#'. $aid .' - '. implode(' - ', $values);
                }
            }
            break;
        default:
            break;
    }
} else {
    $feed=isset($feed)?$feed:"";
    $location = "Location: ".$ref->getLink().$feed;
    header($location);
    exit;
}
// For emacs users
// Local Variables:
// mode: php
// End:
?>
