upstream web {
    server web:443;
}

upstream realtime {
    server realtime:443;
}

server {
        listen       443 ssl;
        server_name  tuleap-web.tuleap-aio-dev.docker;

        ssl_certificate /etc/pki/tls/certs/localhost.cert.pem;
        ssl_certificate_key /etc/pki/tls/private/localhost.key.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # Tweak for file upload and SVN
        client_max_body_size 256M;

        location / {
            proxy_pass https://web;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host              $host;
        }

        location /socket.io {
            proxy_pass https://realtime;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host              $host;
            # Mandatory for WS proxying https://www.nginx.com/blog/websocket-nginx/
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
}

server {
    listen       80;
    server_name  tuleap-web.tuleap-aio-dev.docker;

    location /.well-known/ {
      root /opt/letsencrypt;
    }

    location / {
      return 301 https://$server_name:443$request_uri;
    }
}
