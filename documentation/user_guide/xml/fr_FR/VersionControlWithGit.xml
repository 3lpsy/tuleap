<?xml version='1.0' encoding='UTF-8'?>
<!--
//
// Copyright (c) Xerox Corporation, Codendi 2007-2008.
// This file is licensed under the GNU General Public License version 2. See the file COPYING. 
//
-->
<chapter id="VersionControlWithGit">
  <title>Contrôle de version avec Git</title>

  <para>Ce chapitre n'est pas un tutoriel Git. Il a pour objectif d'expliquer comment utiliser les fonctionnalitées proposées par &SYS_PRODUCT_NAME;
  Si vous n'êtes pas familier avec Git nous vous conseillons de vous référer à la documentation (voir <xref linkend="GitReferences" />).</para>

  <para>
    Le support de Git a été développé pour supporter plusieurs
    dépôts par projet. Ceci est en accord avec la philosophie des systèmes de gestion de version distribués qui permet de mettre en place des
    workflow distribuant le développement de fonctionnalitées sur plusieurs dépôts.
  </para>

  <para>L'accès à Git (à la fois pour les opérations de lecture et d'écriture) nécessite une clef SSH valide et configurée dans vos préférences utilisateur. Se référer à <xref linkend="AccountMaintenance" /> pour les détails.
  </para>

  <para>Deux types de dépôt sont distingués:
    <itemizedlist mark="bullet">
        <listitem><para>Référence : considéré comme un sous projet ou un module indépendant d'un projet aui peut être forké.</para></listitem>
        <listitem><para>Fork (clone) : le résultat de la commande 'git clone', permettant ainsi de répartir les développements de fonctionnalités sur le(s) équipe(s).</para></listitem>
    </itemizedlist>
  </para>

  <section id="GitRepositoryReference">
    <title>Référence</title>

    <para>Une référence peut-être créée. Seul un administrateur projet peut créer une référence depuis la page d'accueil du service. Le nommage des références.</para>

    <para>Une référence doit être initialisée
      <itemizedlist mark="bullet">
        <listitem><para>cd mysources</para></listitem>
        <listitem><para>git init</para></listitem>
        <listitem><para>git add .</para></listitem>
        <listitem><para>git commit -m 'initial commit'</para></listitem>
        <listitem><para>git push USER@SERVER:/gitroot/PROJECT_SHORT_NAME/REPO_NAME.git master</para></listitem>
      </itemizedlist>
    </para>
  </section>

  <section id="GitRepositoryFork">
    <title>Fork</title>
    <para>Tout dépôt peut être forké par un membre du projet.</para>
  </section>

  <section id="GitRepositorySettings">
    <title>Paramètres du dépôt</title>

    <para>L'administrateur de projet a la possibilité de modifier la configuration du dépôt. En particulier:
      <itemizedlist mark="bullet">
        <listitem><para>la description textuelle du dépôt,</para></listitem>
        <listitem><para>les permissions,</para></listitem>
        <listitem><para>et la notification suite à un "push"</para></listitem>
      </itemizedlist>
    </para>

    <section id="GitRepositorySettingsAccessControlGitShell">
      <title>Permissions simples</title>
      <para>Le contrôle d'accès par défaut est basé sur la notion de dépôt public/privés. Un dépôt public est accessible par tous les utilisateurs ayant un compte valide sur la platforme.
        Les dépôt privés, eux, ne sont accessibles que par les membres de projet.</para>
      <para>Dans tous les cas de figure, les membres de projet ont toujours un accès complet à tous les dépôt (en lecture et en écriture).</para>
      <para>Si la fonctionnalité "d'utilisateur restreint" est activée, seule la création de dépôts privés est possible.</para>
      <para>Il est possible d'avoir des permissions à grain fin. Se référer à <xref linkend="GitRepositoryGitolite" />.</para>
    </section>

    <section id="GitRepositorySettingsEmail">
      <title>Notification par courriel</title>
      <para>Il est souvent conseillé de tenir informée toute l'équipe lorque quelqu'un "pousse" (push) des nouvelles choses dans un dépôt.
        Vous pouvez configurer celui ci pour qu'il envoi automatiquement un courriel à une liste de personne (ou, mieux, à une liste de diffusion).</para>
      <para>Le contenu du message dépend du contenu du push mais vous pouvez configurer:
        <itemizedlist mark="bullet">
          <listitem><para>le préfix du sujet</para></listitem>
          <listitem><para>la liste des destinataires</para></listitem>
        </itemizedlist>
      </para>
      <para>Lorsque vous ajoutez un destinataire, l'autocompletion est faite à sur les noms d'utilisateurs de la platforme. Vous pouvez néanmoins forcer n'importe quelle autre adresse (comme celle d'une liste de diffusion)</para>
      <para>Dès la liste configurée, tous les push suivant enverons un message contenant :
        <itemizedlist mark="bullet">
          <listitem><para>la liste des commits contenus dans le push,</para></listitem>
          <listitem><para>les fichiers modifiés (+diffstats),</para></listitem>
          <listitem><para>pour chaque commit, un lien vers diff dans l'interface gitweb de &SYS_PRODUCT_NAME;,</para></listitem>
          <listitem><para>pour chaque référence (dans un message de commit par exemple), l'automagic link correspondant.</para></listitem>
        </itemizedlist>
        L'extraction des références croisées ne sera pas fait si la fonctionnalité de notification par mail n'est pas activée.
      </para>
    </section>
  </section>

  <section id="GitRepositoryGitolite">
    <title>Permissions fines</title>
    <para>Á partir de la version 4.0.20, l'administrateur de projet peu créer des dépôt permettant de définir des permissions plus fines.</para>
    
    <para>Pour activer cette fonctionnalité, l'administrateur de projet doit, au préalable, activer le mode "&SYS_PRODUCT_NAME; Lab" dans ses préférences utilisateur (via la Page Personnelle).
      Ainsi fait, une case à cocher apparait dans l'interface de création de dépôt. Cette case permet de créer un dépôt "permissions à grain fin".</para>
    
    <para>Ce nouveau type de dépôt permet de :
      <itemizedlist mark="bullet">
        <listitem><para>Définir une arborescence de dépots. Par exemple "platform/x86".</para></listitem>
        <listitem><para>D'associer des groupes d'utilisateurs aux différentes capacités: Lecture, Écriture, Rewind.</para></listitem>
      </itemizedlist>
    </para>

    <para>Dans l'interface de gestion d'un dépôt, l'administrateur de projet peut associer un ou plusieurs groupes à
      <itemizedlist mark="bullet">
        <listitem><para>Lecture: accèder au dépôt en lecture seule</para></listitem>
        <listitem><para>Écriture: pousser (push) de nouvelles révisions, des branches, des tags (mais aussi les supprimer).</para></listitem>
        <listitem><para>Rewind: dépasser les barrières de protection de git et jouer avec l'historique du dépôt. Il est fortement déconseillé d'activer cette possibilité si vous ne comprenez par parfaitement ce que vous faites. Cette capacité permet de corompre définitivement l'historique d'un dépôt.</para></listitem>
      </itemizedlist>
    </para>

    <para>Le fork et la suppression d'un dépot "permissions fine" sera disponible ulterieurement.</para>
  </section>

  <section id="GitRepositoryDeletion">
    <title>Suppression d'un dépôt</title>
    <para>
      Un dépôt peut être supprimé, une archive compressée sera créée sous le nom {PROJECT_SHORT_NAME}_{REPOSITORY_NAME}_{DEL_TIMESTAMP}.tar.bz2
      et déplacé dans le répertoire de sauvegarde.
      Se référer à la section <xref linkend="GitRepositoryImport" /> pour l'import des dépôts.
    </para>
  </section>

  <section id="GitRepositoryImport">
    <title>Import de dépôt</title>
    <para>Il n'existe pas de procédure automatique pour importer un dépôt, se référer à la documentation de l'administrateur.
    </para>
  </section>

  <section id="GitReferences">
    <title>Les références Git</title>
    <itemizedlist mark="bullet">
      <listitem><para>Site officiel de git <ulink url="http://git-scm.com/">http://git-scm.com/</ulink></para></listitem>
      <listitem><para>Le livre : Pro Git <ulink url="http://progit.org/book/ch1-1.html">http://progit.org/book/ch1-1.html</ulink>.</para></listitem>
    </itemizedlist>
  </section>

</chapter>



<!--
Local Variables:
sgml-parent-document: ("Codendi_User_Guide.xml" "book" "chapter")
End:
-->

