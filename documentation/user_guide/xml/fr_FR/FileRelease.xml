<?xml version='1.0' encoding='ISO-8859-1'?>
<!--
//
// CodeX: Breaking Down the Barriers to Source Code Sharing inside Xerox
// Copyright (c) Xerox Corporation, CodeX, 2001-2004. All Rights Reserved
// This file is licensed under the CodeX Component Software License
// http://codex.xerox.com
//
// $Id: FileRelease.xml 1307 2005-01-11 14:52:59Z guerin $
//
// Originally written by Laurent Julliard and Stephane Bouhet 2002, CodeX Team, Xerox
//
-->

  <chapter id="FileRelease">
    <title>Publication de fichiers</title>

    <section id="SourceCodeReleaseGuidelines">
      <title>Publication du code source : conseils</title>

      <para>Il existe deux façons pour un administrateur de projet de
      donner accès au code source d'un projet hébergé sur CodeX : le
      système de contrôle de version (CVS ou Subversion) et le système
      de publication de fichiers. A première vue, le fait d'avoir deux
      systèmes de livraison du code source peut paraître
      redondant. Cependant les deux outils ont été développés avec des
      objectifs différents et pour des cibles d'utilisateurs
      différentes. En ce sens ils sont très complémentaires. Proposer
      les deux outils à vos utilisateurs est un vrai plus.</para>

      <itemizedlist mark="bullet">

        <listitem>
          <para><emphasis role="bold">Le système de contrôle de
          version (SCV)</emphasis> offre un accès au code source y
          compris l'historique des différentes versions de chaque
          fichier. Toutefois accéder au SCV nécessite l'installation
          d'un logiciel particulier sur le poste client. Certains
          utilisateurs ne peuvent pas ou ne souhaitent pas le
          faire. L'accès au SCV est particulièrement adapté aux
          utilisateurs de CodeX qui souhaitent approfondir le code,
          ajouter de nouvelles extensions, corriger des anomalies et
          proposer des modifications à l'équipe de projet. A noter que
          certains projets n'autorisent pas l'accès de leur SCV aux
          personnes qui n'appartiennent pas à l'équipe. D'où
          l'importance du mécanisme de publication de fichiers.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Le mécanisme de publication de
          fichiers</emphasis> permet de livrer le logiciel (source,
          binaire ou documentation) sous forme de fichiers d'archive
          (zip, tar, jar...) qu'un utilisateur autorisé peut
          facilement télécharger depuis le site Web de CodeX. Aucun
          outil ni connaissance particulière n'est nécessaire. En
          complément de la fourniture éventuelle du code source,
          fournir des versions binaires prêtes à utiliser de vos
          logiciels est une excellente pratique. Le service de
          publication de fichiers est particulièrement adapté aux
          utilisateurs qui souhaitent utiliser rapidement votre logiciel
          sans attendre.</para>
        </listitem>
      </itemizedlist>

      <para>Comme  vous  pouvez  le  voir,  les   deux services   sont
      fondamentalement différents et nous vous encourageons vivement à
      les   utiliser  tous les   deux. Dans  le  but  de  vous aider à
      comprendre pourquoi ces outils sont complémentaires,  le cycle de vie
      typique d'un projet est illustré sur la  <xref
      linkend="FigureATypicalSoftwareDevelopmentLifeCycleOnCodeX"
      />.</para>
    </section>

    <section id="FileReleaseJargon">
      <title>Jargon du service de publication de fichiers</title>

      <para>Avant d'aller plus avant dans la description du service de
      publication de fichiers nous allons définir quelques termes clés
      utilisés dans cette section. Ces termes sont clés pour la
      compréhension de ce service aussi bien pour les administrateurs
      que pour les utilisateurs. (voir <xref
      linkend="FigureTheFileReleaseStructure" />).</para>

      <figure id="FigureTheFileReleaseStructure">
        <title>Structure du service de publication de fichiers</title>

        <mediaobject>
          <imageobject>
            <imagedata format="PNG"
                       fileref="../../slides/fr_FR/File_Release.png" width="12cm" />
          </imageobject>
        </mediaobject>
      </figure>

      <itemizedlist mark="bullet">
        <listitem>
          <para><emphasis role="bold">Paquets</emphasis> : les paquets
          sont les conteneurs de plus haut niveau du service de
          publication de fichiers. Un paquet peut contenir une ou
          plusieurs version d'un logiciel. En général un paquet
          correspond à un délivrable de haut niveau de votre
          projet. Supposons que votre équipe travaille sur un moteur
          de base de données. Dans ce cas les paquets pourraient être
          BD-moteur pour le moteur de la base de données elle-même,
          BD-pilotes pour les différents pilotes ODBC et JDBC. Un
          troisième paquet DB-doc pourrait être créé pour délivrer la
          documentation versionnée dans un conteneur distinct.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Versions</emphasis> : une version
          est une collection de fichiers individuels qui ont été figés
          à un certain moment, versionnés et livrés. En général les
          fichiers contenus dans un conteneur &#34;Version&#34; sont
          comme leur nom l'indique de la même version. Si nous
          reprenons l'exemple du projet de moteur de base de données
          on pourrait imaginer que le paquet BD-moteur contient une
          version 1.0, une version 1.1 et une version
          2.0beta. BD-pilote pourrait aussi avoir une version 1.0 mais
          pas de version 1.2 ou 2.0beta si les pilotes 1.0
          fonctionnent avec le moteur version 1.2 et 2.0beta. En
          d'autres termes, le nommage des versions est totalement
          libre d'un paquet à l'autre.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Fichiers</emphasis> : les
          fichiers sont les entités de base qu'on trouve dans une
          version. En nous appuyant encore une fois sur notre exemple
          de moteur de base de données, on peut imaginer que la
          version 1.0 du paquet BD-moteur comprend le fichier
          bd-moteur-src-1.0.zip pour le code source et
          bd-moteur-win32-1.0.zip pour la version précompilée pour MS
          Windows. Lorsque la version 1.2 est publiée, elle pourrait
          comporter les fichiers bd-moteur-src-1.2.zip pour les
          sources, bd-moteur-win32-1.0.zip pour la version précompilée
          pour MS Windows et bd-moteur-linux-intel-1.0.zip pour la
          version précompilée pour Linux sur plateforme Intel. Nous
          n'avons rien dit du paquet BD-doc. Il est peut être vide
          pour le moment ;-)</para>
        </listitem>
      </itemizedlist>

      <note><para>A première vue cette structure peut paraître un peu
      complexe. Néanmoins c'est véritablement le genre de structure
      qu'une équipe de projet doit adopter pour rendre ses livraisons
      faciles à comprendre et à télécharger. Réfléchir à la structure
      de vos délivrables logiciels et documentation peut vous aider
      considérablement dans l'organisation de votre projet et de vos
      processus de travail (comme les opérations de build ou de
      test). Ne négligez pas cette partie de votre
      projet.</para></note>
    </section>

    <section id="FileReleaseBrowsingandDownload">
      <title>Navigation dans les fichiers publiés et téléchargement</title>

      <para>La version la plus récente de chaque paquet d'un projet
      est toujours visible sur le page de sommaire (voir <xref
      linkend="FigureASampleProjectSummaryPage" />). Cette version
      peut être immédiatement téléchargée en cliquant sur le lien
      &#34;Téléchargement&#34; ou en visitant la liste complète des
      paquets et versions en cliquant sur le lien &#34;Voir tous les
      fichiers du projet&#34;</para>

      <figure id="FigureTheFileReleaseScreenOfTheDataGlyphToolkitProject">
        <title>L'écran de publication des fichiers du projet DataGlyph Toolkit</title>

        <mediaobject>
          <imageobject>
            <imagedata format="PNG"
                       fileref="../../screenshots/fr_FR/sc_filereleasedownloads.png" width="15.3cm" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Le premier exemple illustré sur la <xref
      linkend="FigureTheFileReleaseScreenOfTheDataGlyphToolkitProject"
      /> montre l'écran de publication des fichiers du projet
      DataGlyph Toolkit. Ce projet ne comporte qu'un seul paquet
      appelé &#34;Xerox DataGlyph Toolkit&#34; comprenant 7 versions
      de 4.0.4 à 4.0.6, listées par ordre chronologique. Chaque
      version contient une archive pour le code source et une autre
      pour les binaires précompilés (byte code Java dans ce cas). A
      partir de la version 4.0.6 un nouveau fichier a été ajouté pour
      la gestion des clés de licence.</para>

      <para>Le second exemple provient d'un projet appelé Global
      Solutions Architecture. La structure est ici différente du cas
      précédent. Le projet utilise deux paquets distincts : un pour le
      GSA Toolkit et un second pour la DataBus. Les schémas de nommage
      des versions de chaque paquet sont totalement différents. Il est
      fort probable que la version 0.5 de DataBus fonctionne avec les 3
      versions Awk, Booby et Condor (les noms de versions ne sont pas
      nécessairement des nombres). Dans la deuxième version du paquet
      Toolkit la documentation est livrée dans un fichier
      séparé.</para>

      <figure id="FigureTheFileReleaseScreenOfTheGSAProject">
        <title>L'écran de publication des fichiers du projet GSA</title>

        <mediaobject>
          <imageobject>
            <imagedata format="PNG"
                       fileref="../../screenshots/fr_FR/sc_filereleasedownloads2.png" width="15.3cm" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section id="FileReleaseDelivery">
      <title>Livraison de fichiers</title>

      <para>Cette section s'adresse uniquement aux membres d'un
      projet. Elle explique par le menu le processus de livraison de
      fichiers. Il se décompose en trois étapes :</para>

      <procedure>
        <step>
          <para><emphasis role="bold">Création de paquets</emphasis> :
          il faut tout d'abord créer un ou plusieurs paquets. Ceci ne
          doit être fait qu'une seule fois. Lorsque les paquets sont
          en place vous pouvez y ajouter de nouvelles versions à
          n'importe quel moment.</para>
        </step>

        <step>
          <para><emphasis role="bold">Création, définition et validation de versions</emphasis> :
          une fois le paquet créé on peut y ajouter une ou plusieurs
          versions. Pour chaque version, on peut attacher des fichiers, définir la date de
          publication, lister les changements contenus dans cette
          version, etc....</para>
        </step>
      </procedure>
      <para>De plus, vous pouvez aussi définir des permissions d'accès
      au niveau de chaque paquet et de chaque version.
      </para>

      <section id="PackageCreation">
        <title>Création d'un paquet</title>

        <para>Pour créer un paquet vous devez tout d'abord vous
        rendre sur la page de publication des fichiers. Pour se faire
        vous pouvez soit vous diriger vers la page d'administration du
        projet et sélectionner le lien &#34;[Modifier/Ajouter une
        version...]&#34; situé dans la partie inférieure droite de
        l'écran, soit cliquer sur l'entrée &#34;Fichiers&#34; du menu
        du projet puis sur le lien &#34;Administration&#34; du menu de
        publication de fichiers.</para>

        <para>La première fois que vous utilisez ce service aucun
        paquet n'est disponible. Pour en créer un il suffit de taper
        le nom du paquet dans le champ vierge réservé à cet effet
        ainsi qu'un chiffre indiquant son emplacement à l'écran par
        rapport aux autres paquets puis de cliquer sur le bouton
        &#34;Créer ce paquet&#34;. Une fois le paquet créé vous pouvez
        à loisir modifier son nom et son statut. Un paquet est soit
        &#34;Actif&#34;, c'est à dire visible sur la page de
        publication de fichiers, soit &#34;Caché&#34; auquel cas il n'est
        visible que pour l'administrateur du service de publication
        des fichiers. Basculer le statut de &#34;Actif&#34; à
        &#34;Caché&#34; et inversement ne détruit ni les versions ni
        les fichiers contenus dans le paquet.</para>

         <para>Il est à noter que les paquets sont affichés par ordre
         croissant de rang à l'écran.</para>

        <para>Lorsque vous modifiez le nom, le rang ou le statut d'un paquet n'oubliez pas de cliquer sur le bouton &#34;Valider&#34; !</para>

        <figure id="FigureAPartOfThePackageAdministrationScreenGSAProject">
          <title>Une partie de l'écran d'administration des paquets d'un projet</title>

          <mediaobject>
            <imageobject>
              <imagedata format="PNG"
                         fileref="../../screenshots/fr_FR/sc_frspackages.png" width="15.3cm" />
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section id="ReleaseCreation">
        <title>Création, configuration et validation d'une version</title>

        <para>Une fois le paquet créé vous pouvez y insérer de
        nouvelles versions immédiatement. Pour ce faire, cliquez sur
        le lien [Créer une version] situé en regard du paquet
        approprié (voir <xref
        linkend="FigureAPartOfThePackageAdministrationScreenGSAProject"
        />).</para>

        <para>L'écran suivant permet d'administrer entièrement une version. 
        Veuillez notez que l'essentiel de cette étape de définition du contenu d'une version 
        s'applique aussi bien lors de sa création que lors de sa mise à jour. 
        L'écran de configuration des versions est composé de 6 courtes
        parties .</para>

			
		  <figure id="FigureReleaseCreation">
        <title>Création d'une version</title>
        <mediaobject>
          <imageobject>
            <imagedata format="PNG"
                       fileref="../../screenshots/fr_FR/sc_frsreleasecreation.png"/>
          </imageobject>
        </mediaobject>
      </figure>
			
        <itemizedlist mark="bullet">
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 1 - Donnez les informations concernant la version</emphasis></para>

            <para>La première étape permet de renseigner les informations
            comme le nom de la version, son
            statut et le paquet auquel elle est liée. Vous devez aussi
            fournir une date de publication, la date courrante est remplie par défaut.</para>
			 </listitem>

          <listitem>
            <para><emphasis role="bold">&Eacute;tape 2 - Télécharger et attacher les fichiers à une version</emphasis></para>

            <para>Comme expliqué précédemment plusieurs fichiers
            peuvent être attachés à une version. Le téléchargement
            de fichiers peut se faire de deux façons : soit en indiquant directement
            via l'interface
             Web (HTTP) le fichier approprié sur votre disque local, soit en les chargeant sur le
            serveur CodeX. Pour ce faire, le serveur CodeX offre un
            mécanisme de chargement via FTP (ou SCP). Pour télécharger
            vos fichiers, cliquez sur le &#34;?&#34; situé à droite du lien &#34;Ajouter un fichier&#34;
            puis suivez les instructions à l'écran. Par ailleurs,
            si vous êtes un utilisateur Windows, vous pouvez aussi
            accéder à l'espace de chargement FTP directement depuis
            l'explorateur Windows et y glisser les fichiers (voir
            <xref linkend="MSWindowsSharedResources" />). Ensuite
            rafraîchissez la page Web pour voir apparaître les
            fichiers chargés.</para>

            <para>Avant de charger les fichiers assurez-vous de leur
            donner des noms parlants pour les utilisateurs. Idéalement
            le nom des fichiers doit comprendre le numéro de version
            et une extension indiquant s'il s'agit d'un fichier source
            ou binaire.</para>
            
            <para>Une fois les fichiers chargés, vous allez pouvoir les
            ajouter à votre version. Pour ce faire, cliquez sur le menu déroulant 
            &#34;choisir...&#34; de la colonne &#34;Nom de fichier&#34;, puis sélectionnez
            &#34;parcourir&#34; si vous souhaitez ajouter un fichier depuis son emplacement local ou
            sélectionnez le nom du fichier chargé (en scp ou ftp) que vous souhaitez ajouter.
            Pour chaque fichier il est possible de préciser l'architecture matérielle auquel il 
            est destiné, son type (source, binaire, documentation ainsi que le type de compression). 
            Ceci n'est pas absolument necessaire mais ces informations sont très utiles aux utilisateurs.
            Vous pouvez également supprimer des fichiers en cliquant sur la poubelle à gauche de la ligne 
            correpondant au fichier à supprimer.</para>


            <para><tip><title>Coup de pouce : compressez toujours vos
            délivrables</title><para>Pour économiser l'espace de
            stockage sur le serveur CodeX ainsi que sur les machines
            des utilisateurs et pour minimiser l'utilisation de la
            bande passante du réseau, veillez à compresser les
            fichiers livrés. utilisez Winzip sur Windows et compress,
            gzip ou même mieux bzip2 sur
            Linux/Unix.</para></tip></para>
          </listitem>

		    <listitem>
            <para><emphasis role="bold">&Eacute;tape 3 - Renseigner les notes concernant la version et les modifications</emphasis></para>
				
				<para>Vous pouvez copier-coller ou télécharger des notes concernant
				la version et ses modifications. Pour télécharger cliquez sur le lien 
				&#34;Télécharger&#34; correspondant puis séléctionnez le fichier.</para>
				
            <para>Les notes concernant la version sont typiquement un
            texte court (10 à 20 lignes) et de haut niveau résumant
            les modifications visibles pour l'utilisateur (nouvelle
            interface utilisateur, nouvelles fonctionnalités,
            nouvelles interfaces de programmation...). C'est un
            document important et les versions publiées devraient
            toutes être assorties de ce document. Il permet par
            exemple à vos utilisateurs de décider s'ils doivent 
            mettre à jour leur ancienne version ou pas..</para>

            <para>Le document décrivant les modifications (ChangeLog)
            est un document beaucoup plus technique décrivant en détail
            tous les défauts corrigés dans cette version et tous les
            changements intervenus dans le code, le design ou
            l'architecture. Ce document n'est pas aussi critique que
            le précédent pour l'utilisateur final mais il est critique
            pour ceux qui utilisent votre logiciel dans d'autres
            activités de développement ou d'intégration.</para>

            <para><tip><title>Coup de pouce : comment générer
            facilement un fichier de recensement des
            modifications</title><para>Si vous utilisez CVS comme
            outil de contrôle de version vous pouvez très facilement
            générer un fichier de Changelog informatif et correctement
            formaté. L'outil cvs2cl disponible sur <ulink
            url="http://www.red- bean.com/cvs2cl">http://www.red-
            bean.com/cvs2cl</ulink> extrait automatiquement tous les
            messages associés aux opérations de commit et les présente
            avec la liste des fichiers impactés, les dates de
            modifications et le nom de l'auteur. C'est une excellente 
            base pour un document de type ChangeLog.</para></tip></para>
          </listitem>
          
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 4 - Modification des permissions d'une version</emphasis></para>
            	
            <para>Si vous ne spécifiez aucune permission d'accès pour
          une version, la version hérite des permissions définies pour le
          paquet dans lequel elle se trouve. (Par défaut un paquet a la permission
            &#34;utilisateurs-enregistrés&#34;.)Si vous avez besoin d'un contrôle d'accès plus fin sur
          vos délivrables logiciels, vous pouvez aussi définir des
          permissions au niveau de chaque version.</para>

          <para>Pour cela, séléctionnez le lien &#34;[Voir/Modifier]&#34; de la 
          partie permissions, puis procédez à la sélection des groupes d'utilisateurs
          autorisés pour définir des permissions sur une
          version.</para>

          <para>Si vous ne spécifiez aucune permission d'accès pour
          une version, la version hérite des permissions définies pour le
          paquet dans lequel elle se trouve. Si vous définissez des
          permissions pour une version, elles prennent le pas sur les
          permissions du paquet dans lequel elle se trouve.</para>
          </listitem>
          
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 5 - Créer automatiquement une annonce
            (optionnel)</emphasis></para>

            <para>Cette étape est optionnelle, vous pouvez choisir de ne pas en 
            tenir compte. Cette étape donne la possibilité aux administrateurs du 
            projet de soumettre automatiquement une annonce concernant la nouvelle 
            version tout juste créée (si vous n'êtes pas administrateur du projet, 
            vous ne verrez tout simplement pas cette étape). Pour créer une annonce,
            il suffit de cocher la case située en regard de &#34;Soumettre une annonce&#34;,
            puis de compléter voter annonce.
            Le sujet et 
            le message de l'annonce sont préremplis avec un texte par défaut. Vous pouvez 
            bien entendu les modifier avant de valider. L'annonce apparaîtra sur la page 
            de sommaire de votre projet. Il s'agit là d'un bon moyen d'avertir vos 
            utilisateurs de la disponibilité d'une nouvelle version. 
            L'annonce apparaîtra ensuite dans la page d'administration des annonces, comme 
            toute autre annonce.
            </para>
          </listitem>
          
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 6 - Envoyer une notification par email (optionnel)</emphasis></para>

            <para>Cette étape est optionnelle, c'est à dire qu'elle peut
            ne pas apparaître à l'écran. Si certains utilisateurs
            CodeX ont activé la surveillance de l'un de vos paquets,
            l'étape 4 vous indiquera combien l'ont fait. CodeX vous
            donne alors la possibilité de leur envoyer (ou pas) une
            notification email les avertissant de la publication d'une
            nouvelle version conformément à leur demande. Nous vous
            conseillons vivement de ne pas négliger cette étape et de
            tenir vous utilisateurs informés.</para>

            
            <para><tip><title>Coup de pouce : fournissez toujours un
            fichier LISEZMOI (ou README en
            anglais)</title><para>Lorsque vous préparez les fichiers
            d'une nouvelle version, assurez vous de toujours inclure
            dans le répertoire de pluReleasePropertiess haut niveau de votre archive un
            fichier LISEZMOI (ou README). Ce fichier doit comporter
            toutes les informations utiles concernant votre projet
            telles que l'adresse de votre site Web sur CodeX, les
            listes de distributions destinées aux utilisateurs, comment
            soumettre un bug ou une demande d'assistance à l'équipe de
            projet (via CodeX bien sûr)</para></tip></para>
          </listitem>
        </itemizedlist>
    </section>

	<section id="ReleaseModification">
        <title>Modification d'une version</title>

        <para>Une fois votre version créée vous pouvez la modifier. Pour ce faire, cliquez sur
        le lien [Modifier une version] situé en regard du paquet
        approprié sur l'écran d'administration des paquets.</para>
        
        <figure id="FigureAPartOfTheReleasesAdministrationScreenGSAProject">
          <title>Une partie de l'écran d'administration des versions d'un projet </title>

          <mediaobject>
            <imageobject>
              <imagedata format="PNG"
                         fileref="../../screenshots/fr_FR/sc_frsreleases.png" width="15.3cm" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>L'écran suivant permet de gérer les versions, il est dans l'esprit similaire à celui d'administration des paquets. 
        Veuillez notez que l'essentiel des étapes de modification d'une version
        est similaire à la création d'une version. (voir  <xref linkend="ReleaseCreation" />)
        L'écran de configuration des versions est composé de 6 courtes
        parties .</para>

        <itemizedlist mark="bullet">
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 1 - Modifier les informations concernant la version</emphasis></para>

            <para>Cette étape est identique à celle de la création d'une release. 
            (voir <xref linkend="ReleaseCreation" />, étape 1.)</para>
			 </listitem>

          <listitem>
            <para><emphasis role="bold">&Eacute;tape 2 - Télécharger et attacher les fichiers à une version</emphasis></para>

            <para>L'ajout de fichier est identique à celui lors de la création d'une version.
            (voir <xref linkend="ReleaseCreation" />, étape 2.) En revanche, pour les fichiers
            déjà ajoutés à une version, vous avez la possibilité de les supprimer
            en séléctionnant la case de la colonne supprimer correpondant au fichier à supprimer.
            Vous avez également la possibilité de changer le fichier de version et de modifier la date
            du fichier.</para>
          </listitem>

		    <listitem>
            <para><emphasis role="bold">&Eacute;tape 3 - Renseigner les notes concernant la version et les modifications</emphasis></para>
				
				<para>Cette étape est identique à celle de la création d'une release. 
            (voir <xref linkend="ReleaseCreation" />, étape 3.)</para>
          </listitem>
          
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 4 - Modification des permissions d'une version</emphasis></para>
            	
            <para>Cette étape est identique à celle de la création d'une release. 
            (voir <xref linkend="ReleaseCreation" />, étape 4.)</para>

          </listitem>
          
          <listitem>
          	<para><emphasis role="bold">&Eacute;tape 5 - Créer automatiquement une annonce
            (optionnel)</emphasis></para>

            <para>Cette étape est identique à celle de la création d'une release. 
            (voir <xref linkend="ReleaseCreation" />, étape 5.)</para>
          </listitem>
          
          <listitem>
            <para><emphasis role="bold">&Eacute;tape 5 - Envoyer une notification par email (optionnel)</emphasis></para>

            <para>Cette étape est identique à celle de la création d'une release. 
            (voir <xref linkend="ReleaseCreation" />, étape 6.)</para>
          </listitem>
        </itemizedlist>
    </section>

    <section id="FileAccessPermissions">
      <title>Configurer les droits d'accès</title>
      
      <para>Par défaut, pour un paquet ou une version, l'accès en lecture est permis à tous les
      utilisateurs à la seule condition qu'ils soient enregistrés (les
      utilisateurs anonymes n'y ont pas accès). Cependant certains
      projets peuvent souhaiter limiter l'accès aux fichiers
      publiés. Dans ce cas vous pouvez restreindre les permissions
      d'accès de vos versions ou de vos paquets à certains groupes
      d'utilisateurs. Voir <xref linkend="UserGroups" /> pour plus
      d'information sur les groupes d'utilisateurs.</para>


      <para>Les permissions d'accès sur les paquets et les versions sont vérifiés à deux niveaux :</para>
      <itemizedlist mark="bullet">
        <listitem><para><emphasis role="bold">Liste de
        fichiers :</emphasis> Lorsqu'un utilisateur n'a pas accès à un
        paquet ou à une version alors ce paquet ou cette version
        n'apparaît pas dans la page principale du service
        'Fichiers'. Ainsi l'utilisateur ne connaît pas l'existence de
        la version ou du paquet en question.</para></listitem>

        <listitem><para><emphasis
        role="bold">Téléchargement :</emphasis> Si un utilisateur
        récupère ou construit manuellement un lien de téléchargement
        d'un fichier non autorisé, le téléchargement échouera. Le
        système contrôle en effet de façon systématique les
        permissions d'accès lors d'une demande de
        téléchargement.</para></listitem>
      </itemizedlist>

      <para>Les permissions d'accès peuvent donc être définies au
      niveau d'un paquet ou d'une version :</para>

      <figure id="FigurePackagePermissions">
        <title>Modification des permissions d'accès sur un paquet</title>
        <mediaobject>
          <imageobject>
            <imagedata format="PNG"
                       fileref="../../screenshots/fr_FR/sc_packagepermissions.png"/>
          </imageobject>
        </mediaobject>
      </figure>

      <itemizedlist mark="bullet">

        <listitem>
          <para><emphasis role="bold">Permissions d'un paquet</emphasis></para>

          <para>En cliquant sur le lien 'Définir permissions' sur
          l'écran d'administration des paquets (voir <xref
          linkend="FigureAPartOfThePackageAdministrationScreenGSAProject"
          />), un membre du projet ayant le niveau de permission
          'Administration' sur le service 'Fichiers' peut définir des
          permissions spécifiques pour n'importe quel paquet.</para>

          <para>La page de définition des permissions sur un paquet
          (<xref linkend="FigurePackagePermissions" />) présente la
          liste de tous les groupes utilisateurs définis dans le
          projet. Il suffit alors de sélectionner les groupes
          d'utilisateurs auxquels on souhaite donner les droits
          d'accès. Si vous appuyer sur 'Retour aux valeurs d'origine',
          les permissions d'accès sur ce paquet seront réinitialisées
          et tout utilisateur enregistré pourra à nouveau télécharger
          les versions contenues dans ce paquet.
          </para>

          <!-- LJ TODO:c'est vrai ça?
          <para>Note that each time you edit permissions associated to
          a package, the previous values are reset. So, for instance,
          if you grant permissions to 'project members', submit, then
          want to grant permissions to another group, do not forget to
          select also 'project members' the second time, or they will
          not have access to your package.</para>
          -->

          <para>Par défaut, les permissions attachées à un paquet
          s'appliquent à toutes les versions et les fichiers qui se
          trouvent dans ce paquet. Mais vous pouvez aussi spécifier
          des permissions différentes pour une version spécifique
          (voir l'étape 4 de la <xref linkend="ReleaseCreation" />).</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Permissions d'une version</emphasis></para>

         <para>Voir l'étape 4 de la <xref linkend="ReleaseCreation" /></para>
        </listitem>

      </itemizedlist>
    </section>
    
  </section>

  </chapter>
<!--
Local Variables:
sgml-parent-document: ("CodeX_User_Guide.xml" "book" "chapter")
End:
-->

